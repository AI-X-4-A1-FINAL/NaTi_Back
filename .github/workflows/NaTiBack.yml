name: Auto Merge and Deploy

on:
  schedule:
    - cron: '50 6 * * *' # 매일 15시 50분 (한국 시간)
  workflow_dispatch: # 수동 실행 가능

permissions:
  contents: write
  pull-requests: write

jobs:
  auto_merge_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Git 설정
      - name: Configure Git
        run: |
          git config --global user.email "ppuding3861@gmail.com"
          git config --global user.name "ppudding3861"

      # dev 브랜치에 새로운 커밋이 있는지 확인
      - name: Check for new commits in dev branch
        id: check_commits
        run: |
          git fetch origin main
          git fetch origin dev
          NEW_COMMITS_COUNT=$(git rev-list origin/main..origin/dev --count)
          echo "Number of new commits in dev branch: $NEW_COMMITS_COUNT"
          if [ "$NEW_COMMITS_COUNT" -eq 0 ]; then
            echo "No new commits in dev branch."
            echo "has_new_commits=false" >> $GITHUB_ENV
          else
            echo "Found new commits in dev branch."
            echo "has_new_commits=true" >> $GITHUB_ENV
          fi

      # dev 브랜치의 변경 사항을 main 브랜치로 PR 생성
      - name: Create pull request from dev to main
        if: env.has_new_commits == 'true'
        env:
          GH_TOKEN: ${{ secrets.PPUDDING2 }}  # 개인 액세스 토큰을 사용하여 더 높은 권한 부여
        run: |
          echo "Attempting to create PR from dev to main."
          gh pr create --base main --head dev --title "Auto merge dev into main" --body "자동 생성된 Pull Request" || echo "PR already exists."

      # PR 자동 병합
      - name: Auto-merge pull request
        if: env.has_new_commits == 'true'
        env:
          GH_TOKEN: ${{ secrets.PPUDDING2 }}
        run: |
          PR_URL=$(gh pr view dev --json url --jq '.url' || echo "")
          if [ -n "$PR_URL" ]; then
            echo "Merging PR: $PR_URL"
            gh pr merge "$PR_URL" --squash --delete-branch --auto || echo "Merge failed."
          else
            echo "No PR found for dev to main. Skipping merge."
          fi

      # Docker 설정
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Docker 빌드 및 배포
      - name: Run Docker container
        if: env.has_new_commits == 'true'
        env:
          REACT_APP_LLM: ${{ secrets.REACT_APP_LLM }}
          REACT_APP_TTS: ${{ secrets.REACT_APP_TTS }}
        run: |
          docker stop yaggugi-front-app || true
          docker rm yaggugi-front-app || true
          docker build -t yaggugi-front-app --build-arg REACT_APP_LLM=$REACT_APP_LLM --build-arg REACT_APP_TTS=$REACT_APP_TTS .
          docker run -d -p 3000:3000 --name yaggugi-front-app yaggugi-front-app
